<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[KevinLu的博客]]></title>
  <subtitle><![CDATA[像写代码一样写文章]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.yinuolu.com//"/>
  <updated>2015-11-12T13:38:14.000Z</updated>
  <id>http://blog.yinuolu.com//</id>
  
  <author>
    <name><![CDATA[Kevin Lu]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[OC计算字节长度]]></title>
    <link href="http://blog.yinuolu.com/2015/11/12/OC%E8%AE%A1%E7%AE%97%E5%AD%97%E8%8A%82%E9%95%BF%E5%BA%A6/"/>
    <id>http://blog.yinuolu.com/2015/11/12/OC计算字节长度/</id>
    <published>2015-11-12T13:28:40.000Z</published>
    <updated>2015-11-12T13:38:14.000Z</updated>
    <content type="html"><![CDATA[<h2 id="对于文本框的输入字数限制">对于文本框的输入字数限制</h2><p>`<br>-(NSUInteger) unicodeLengthOfString: (NSString *) text {<br>    NSUInteger asciiLength = 0;</p>
<pre><code><span class="keyword">for</span> (NSUInteger <span class="built_in">i</span> = <span class="number">0</span>; <span class="built_in">i</span> &lt; text.<span class="built_in">length</span>; <span class="built_in">i</span>++) <span class="cell">{

    unichar uc = [text characterAtIndex: i];

    asciiLength += isascii(uc) ? <span class="number">1</span> : <span class="number">2</span>;
}</span>
<span class="keyword">return</span> asciiLength;
</code></pre><p>}<br>`</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="对于文本框的输入字数限制">对于文本框的输入字数限制</h2><p>`<br>-(NSUInteger) unicodeLengthOfString: (NSString *) text {<br>    NSUInteger asciiLength = 0;</]]>
    </summary>
    
      <category term="iOS" scheme="http://blog.yinuolu.com/tags/iOS/"/>
    
      <category term="objective-c" scheme="http://blog.yinuolu.com/tags/objective-c/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[OpenSSl简介-记录笔记]]></title>
    <link href="http://blog.yinuolu.com/2015/11/12/OpenSSl%E7%AE%80%E4%BB%8B-%E8%AE%B0%E5%BD%95%E7%AC%94%E8%AE%B0/"/>
    <id>http://blog.yinuolu.com/2015/11/12/OpenSSl简介-记录笔记/</id>
    <published>2015-11-12T09:58:46.000Z</published>
    <updated>2015-11-12T10:05:57.000Z</updated>
    <content type="html"><![CDATA[<h2 id="OpenSSl_简介">OpenSSl 简介</h2><p>公司一个项目要进行交易数据传输,因为这个项目银行那边也是刚刚开始启动,所有的支持只有一个传输字段的说明文档,好吧,总的有人做事不是嘛,于是接口开发正式展开,第一步的难点就是加密解密,我选择使用OpenSSL.<br>OpenSSL初接触的人恐怕最难的在于先理解各种概念</p>
<h3 id="公钥/私钥/签名/验证签名/加密/解密/非对称加密">公钥/私钥/签名/验证签名/加密/解密/非对称加密</h3><p>　　我们一般的加密是用一个密码加密文件,然后解密也用同样的密码.这很好理解,这个是对称加密.而有些加密时,加密用的一个密码,而解密用另外一组密码,这个叫非对称加密,意思就是加密解密的密码不一样.初次接触的人恐怕无论如何都理解不了.其实这是数学上的一个素数积求因子的原理的应用,如果你一定要搞懂,百度有大把大把的资料可以看,其结果就是用这一组密钥中的一个来加密数据,可以用另一个解开.是的没错,公钥和私钥都可以用来加密数据,相反用另一个解开,公钥加密数据,然后私钥解密的情况被称为加密解密,私钥加密数据,公钥解密一般被称为签名和验证签名.<a id="more"></a><br>　　因为公钥加密的数据只有它相对应的私钥可以解开,所以你可以把公钥给人和人,让他加密他想要传送给你的数据,这个数据只有到了有私钥的你这里,才可以解开成有用的数据,其他人就是得到了,也看懂内容.同理,如果你用你的私钥对数据进行签名,那这个数据就只有配对的公钥可以解开,有这个私钥的只有你,所以如果配对的公钥解开了数据,就说明这数据是你发的,相反,则不是.这个被称为签名.<br>　　实际应用中,一般都是和对方交换公钥,然后你要发给对方的数据,用他的公钥加密,他得到后用他的私钥解密,他要发给你的数据,用你的公钥加密,你得到后用你的私钥解密,这样最大程度保证了安全性.</p>
<h3 id="RSA/DSA/SHA/MD5">RSA/DSA/SHA/MD5</h3><p>　　非对称加密的算法有很多,比较著名的有RSA/DSA ,不同的是RSA可以用于加/解密,也可以用于签名验签,DSA则只能用于签名.至于SHA则是一种和md5相同的算法,它不是用于加密解密或者签名的,它被称为摘要算法.就是通过一种算法,依据数据内容生成一种固定长度的摘要,这串摘要值与原数据存在对应关系,就是原数据会生成这个摘要,但是,这个摘要是不能还原成原数据的,嗯….,正常情况下是这样的,这个算法起的作用就是,如果你把原数据修改一点点,那么生成的摘要都会不同,传输过程中把原数据给你再给你一个摘要,你把得到的原数据同样做一次摘要算法,与给你的摘要相比较就可以知道这个数据有没有在传输过程中被修改了.<br>　　实际应用过程中,因为需要加密的数据可能会很大,进行加密费时费力,所以一般都会把原数据先进行摘要,然后对这个摘要值进行加密,将原数据的明文和加密后的摘要值一起传给你.这样你解开加密后的摘要值,再和你得到的数据进行的摘要值对应一下就可以知道数据有没有被修改了,而且,因为私钥只有你有,只有你能解密摘要值,所以别人就算把原数据做了修改,然后生成一个假的摘要给你也是不行的,你这边用密钥也根本解不开.</p>
<h3 id="CA/PEM/DER/X509/PKCS">CA/PEM/DER/X509/PKCS</h3><p>　　一般的公钥不会用明文传输给别人的,正常情况下都会生成一个文件,这个文件就是公钥文件,然后这个文件可以交给其他人用于加密,但是传输过程中如果有人恶意破坏,将你的公钥换成了他的公钥,然后得到公钥的一方加密数据,不是他就可以用他自己的密钥解密看到数据了吗,为了解决这个问题,需要一个公证方来做这个事,任何人都可以找它来确认公钥是谁发的.这就是CA,CA确认公钥的原理也很简单,它将它自己的公钥发布给所有人,然后一个想要发布自己公钥的人可以将自己的公钥和一些身份信息发给CA,CA用自己的密钥进行加密,这里也可以称为签名.然后这个包含了你的公钥和你的信息的文件就可以称为证书文件了.这样一来所有得到一些公钥文件的人,通过CA的公钥解密了文件,如果正常解密那么机密后里面的信息一定是真的,因为加密方只可能是CA,其他人没它的密钥啊.这样你解开公钥文件,看看里面的信息就知道这个是不是那个你需要用来加密的公钥了.<br>　　实际应用中,一般人都不会找CA去签名,因为那是收钱的,所以可以自己做一个自签名的证书文件,就是自己生成一对密钥,然后再用自己生成的另外一对密钥对这对密钥进行签名,这个只用于真正需要签名证书的人,普通的加密解密数据,直接用公钥和私钥来做就可以了.<br>　　密钥文件的格式用OpenSSL生成的就只有PEM和DER两种格式,PEM的是将密钥用base64编码表示出来的,直接打开你能看到一串的英文字母,DER格式是二进制的密钥文件,直接打开,你可以看到……..你什么也看不懂!.X509是通用的证书文件格式定义.pkcs的一系列标准是指定的存放密钥的文件标准,你只要知道PEM DER X509 PKCS这几种格式是可以互相转化的.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="OpenSSl_简介">OpenSSl 简介</h2><p>公司一个项目要进行交易数据传输,因为这个项目银行那边也是刚刚开始启动,所有的支持只有一个传输字段的说明文档,好吧,总的有人做事不是嘛,于是接口开发正式展开,第一步的难点就是加密解密,我选择使用OpenSSL.<br>OpenSSL初接触的人恐怕最难的在于先理解各种概念</p>
<h3 id="公钥/私钥/签名/验证签名/加密/解密/非对称加密">公钥/私钥/签名/验证签名/加密/解密/非对称加密</h3><p>　　我们一般的加密是用一个密码加密文件,然后解密也用同样的密码.这很好理解,这个是对称加密.而有些加密时,加密用的一个密码,而解密用另外一组密码,这个叫非对称加密,意思就是加密解密的密码不一样.初次接触的人恐怕无论如何都理解不了.其实这是数学上的一个素数积求因子的原理的应用,如果你一定要搞懂,百度有大把大把的资料可以看,其结果就是用这一组密钥中的一个来加密数据,可以用另一个解开.是的没错,公钥和私钥都可以用来加密数据,相反用另一个解开,公钥加密数据,然后私钥解密的情况被称为加密解密,私钥加密数据,公钥解密一般被称为签名和验证签名.]]>
    
    </summary>
    
      <category term="OpenSSL" scheme="http://blog.yinuolu.com/tags/OpenSSL/"/>
    
      <category term="随笔" scheme="http://blog.yinuolu.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="OpenSSL" scheme="http://blog.yinuolu.com/categories/OpenSSL/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[搭建hexo遇到过得坑]]></title>
    <link href="http://blog.yinuolu.com/2015/11/11/%E6%90%AD%E5%BB%BAhexo%E9%81%87%E5%88%B0%E8%BF%87%E5%BE%97%E5%9D%91/"/>
    <id>http://blog.yinuolu.com/2015/11/11/搭建hexo遇到过得坑/</id>
    <published>2015-11-11T14:29:02.000Z</published>
    <updated>2015-11-12T09:29:06.000Z</updated>
    <content type="html"><![CDATA[<!--toc-->
<ul>
<li>1.<a href="#mou1">简述安装的主要步骤</a><ul>
<li>1.1安装homebrew</li>
<li>1.2安装node.js</li>
<li>1.3安装hexo</li>
</ul>
</li>
<li>2.<a href="#mou2">踏过的坑点</a></li>
<li>3.<a href="#mou3">解析到自定义域名</a></li>
</ul>
<!--tocstop-->
<p><a name="mou1"></a></p>
<h2 id="1-简述安装的主要步骤"><strong><em> 1.简述安装的主要步骤</em></strong></h2><h3 id="1-安装homebrew">1.安装homebrew</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ruby <span class="operator">-e</span> <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure>
<h3 id="2-安装node-js">2.安装node.js</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">brew </span>install node</span><br></pre></td></tr></table></figure>
<h3 id="3-安装hexo">3.安装hexo</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="operator"><span class="keyword">install</span> -<span class="keyword">g</span> hexo</span></span><br></pre></td></tr></table></figure>
<p><a name="mou2"></a></p>
<h2 id="2-踏过的坑点"><strong><em> 2.踏过的坑点 </em></strong></h2><figure class="highlight monkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g &amp;&amp; hexo d<span class="preprocessor"> #始终失败</span></span><br><span class="line"><span class="built_in">error</span>: <span class="built_in">ERROR</span> Deployer <span class="keyword">not</span> found: git</span><br></pre></td></tr></table></figure>
<p>查了网上资料需要先安装deploy插件执行以下命令：<br><a id="more"></a><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="operator"><span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure></p>
<p>但是发现没办法安装，猜测是墙的原因，于是修改registry:</p>
<figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm config <span class="keyword">set</span> <span class="keyword">registry</span>=<span class="string">"http://r.cnpmjs.org"</span></span><br></pre></td></tr></table></figure>
<p>并且使用sudo权限重新安装：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo npm <span class="operator"><span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure></p>
<p>终于成功安装deploy插件<br>继续<br>执行：hexo g &amp;&amp; hexo d<br>成功部署到github</p>
<h4 id="备注"><strong><em>备注</em></strong></h4><p>此处还可能出现一个错误，当xcode更新后Application的Xcode.app的名字被更改，如：Xcode5.app;<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br><span class="line">xcrun: <span class="keyword">error</span>: active developer path (<span class="string">"/Users/apple/Desktop/Xcode5.app/Contents/Developer"</span>) <span class="keyword">does</span> <span class="keyword">not</span> exist ...</span><br></pre></td></tr></table></figure></p>
<p>原因是git命令时找不到路径，解决方法：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo xcode-select -<span class="keyword">switch</span> <span class="regexp">/Applications/</span>Xcode5.app<span class="regexp">/Contents/</span>Developer</span><br></pre></td></tr></table></figure></p>
<p>注：上面的xcode5.app根据情况，因为我的xcode安装之后，改了名字叫xcode5所以这里是，xcodee5.app如果你没有攺，就是xcode.app<br><a name="mou3"></a></p>
<h2 id="3-解析到自定义域名"><strong><em> 3.解析到自定义域名 </em></strong></h2><p>推荐用DSNPod<br>先到购买域名的服务商去修改dns为DNSPod的对应DNS（这步很重要）<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DNS1: f1g1ns1<span class="class">.dnspod</span><span class="class">.net</span>  </span><br><span class="line">DNS2: f1g1ns2<span class="class">.dnspod</span><span class="class">.net</span></span><br></pre></td></tr></table></figure></p>
<h3 id="一级域名：">一级域名：</h3><p>在dnspod控制台，设置主机记录@，类型A，到IP 192.30.252.153。</p>
<h3 id="二级域名：">二级域名：</h3><p>在dnspod控制台，我们要做3步设置:<br>1.设置主机记录github，类型A，到IP 199.27.76.133<br>2.设置主机记录yourname.github.io，类型CNAME，到github.yourname.com.<br>3.设置主机记录blog，类型CNAME，到 yourname.github.io</p>
<p><strong><em>最后需要注意的是：DNS修改后不会马上生效，需要做的就是耐心等待</em></strong></p>
<h3 id="在github项目中，新建一个文件CNAME，文件中写出你要绑定的域名">在github项目中，新建一个文件CNAME，文件中写出你要绑定的域名</h3><p>CNAME:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blog<span class="class">.yinuolu</span><span class="class">.com</span></span><br></pre></td></tr></table></figure></p>
<h3 id="修改主题：">修改主题：</h3><p>查看主题：<a href="https://github.com/tommy351/hexo/wiki/Themes" target="_blank" rel="external">点这里</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#以pacman为例</span></span><br><span class="line">$ git <span class="keyword">clone</span> https:<span class="comment">//github.com/A-limon/pacman.git themes/pacman</span></span><br></pre></td></tr></table></figure></p>
<p>编辑文件_config.yml，找到theme一行，改成 theme: pacman</p>
<h3 id="更新主题">更新主题</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>cd themes/pacman</span><br><span class="line"><span class="variable">$ </span>git pull</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<!--toc-->
<ul>
<li>1.<a href="#mou1">简述安装的主要步骤</a><ul>
<li>1.1安装homebrew</li>
<li>1.2安装node.js</li>
<li>1.3安装hexo</li>
</ul>
</li>
<li>2.<a href="#mou2">踏过的坑点</a></li>
<li>3.<a href="#mou3">解析到自定义域名</a></li>
</ul>
<!--tocstop-->
<p><a name="mou1"/></p>
<h2 id="1-简述安装的主要步骤"><strong><em> 1.简述安装的主要步骤</em></strong></h2><h3 id="1-安装homebrew">1.安装homebrew</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ruby <span class="operator">-e</span> <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure>
<h3 id="2-安装node-js">2.安装node.js</h3><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">brew </span>install node</span><br></pre></td></tr></table></figure>
<h3 id="3-安装hexo">3.安装hexo</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="operator"><span class="keyword">install</span> -<span class="keyword">g</span> hexo</span></span><br></pre></td></tr></table></figure>
<p><a name="mou2"/></p>
<h2 id="2-踏过的坑点"><strong><em> 2.踏过的坑点 </em></strong></h2><figure class="highlight monkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g &amp;&amp; hexo d<span class="preprocessor"> #始终失败</span></span><br><span class="line"><span class="built_in">error</span>: <span class="built_in">ERROR</span> Deployer <span class="keyword">not</span> found: git</span><br></pre></td></tr></table></figure>
<p>查了网上资料需要先安装deploy插件执行以下命令：<br>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://blog.yinuolu.com/tags/hexo/"/>
    
      <category term="日记" scheme="http://blog.yinuolu.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
      <category term="随笔" scheme="http://blog.yinuolu.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="Hexo" scheme="http://blog.yinuolu.com/categories/Hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://blog.yinuolu.com/2015/08/01/hello-world/"/>
    <id>http://blog.yinuolu.com/2015/08/01/hello-world/</id>
    <published>2015-08-01T12:20:02.000Z</published>
    <updated>2015-11-12T08:00:12.000Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="随笔" scheme="http://blog.yinuolu.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="Hexo" scheme="http://blog.yinuolu.com/categories/Hexo/"/>
    
  </entry>
  
</feed>